{"version":3,"sources":["src/DataStorage.js","src/helpers.js","src/EmailList.js","src/View.js","src/index.js"],"names":["DataStorage","_key","JSON","parse","localStorage","getItem","data","setItem","stringify","id","key","_item","_updateItem","map","_data","uuid","filter","length","replace","c","r","Math","random","v","toString","dateToStr","str","split","year","month","day","Date","getOffsetParent","element","x","y","isNaN","offsetLeft","offsetTop","scrollLeft","scrollTop","offsetParent","top","left","domHelper","selector","parent","document","querySelector","querySelectorAll","target","name","nodeName","parentNode","type","handler","removeEventListener","addEventListener","Array","from","EmailList","list","storage","_storage","size","_list","_initialize","sort","a","b","date","getTime","item","findIndex","find","findIdx","_findIdxById","removeItem","splice","getItemById","select","updateItem","View","Error","_listWrap","_contentWrap","_handleClick","bind","_handleDragStart","_handleDragOver","_handleDragEnd","_handleDelete","event","li","dataset","selectedById","classList","add","innerHTML","_makeTemplate","effectAllowed","_dragItem","_clone","_target","diffY","clientY","_dropPlace","nextElementSibling","style","display","insertBefore","_cloneItem","remove","draggable","_cloneAttachEvents","stopPropagation","removeItemById","cloneNode","deleteBtn","attachEvent","reduce","wrapper","_attachEvents","findAll","forEach","sender","title","content","template","window","dataStorage","emailList","aEmailData","render"],"mappings":"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","file":"src.9b18b5ee.map","sourceRoot":"..","sourcesContent":["/**\n * Use LocalStorage\n */\nexport default class DataStorage {\n  constructor() {\n    this._key = 'EmailList';\n  }\n\n  getItem() {\n    return JSON.parse(localStorage.getItem(this._key));\n  }\n\n  setItem(data) {\n    localStorage.setItem(this._key, JSON.stringify(data));\n  }\n\n  updateItem(id, key, data) {\n    const _item = this.getItem();\n    const _updateItem = _item.map(_data => {\n      if (_data.uuid === id) _data[key] = data;\n      return _data;\n    });\n    this.setItem(_updateItem);\n  }\n\n  removeItem(id) {\n    const _item = this.getItem();\n\n    this.setItem(_item.filter(({ uuid }) => uuid !== id));\n  }\n\n  get size() {\n    return this.getItem() ? this.getItem().length : 0;\n  }\n}\n","/**\n * Helper functions\n */\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport function dateToStr(str) {\n  const [ year, month, day ] = str.split('.');\n  return new Date(year, month - 1, day);\n}\n\n/**\n * Get offset of parent\n * @param element\n * @returns {{top: number, left: number}}\n * @private\n */\nexport function getOffsetParent(element) {\n  let x = 0;\n  let y = 0;\n\n  while( element && !isNaN( element.offsetLeft ) && !isNaN( element.offsetTop ) ) {\n    x += element.offsetLeft - element.scrollLeft;\n    y += element.offsetTop - element.scrollTop;\n    element = element.offsetParent;\n  }\n  return { top: y, left: x };\n}\n\nexport const domHelper = {\n  find: (selector, parent) => {\n    return (parent || document).querySelector(selector);\n  },\n  findAll: (selector, parent) => {\n    return (parent || document).querySelectorAll(selector);\n  },\n  /**\n   * Find parent use nodeName\n   * @param {DOMElement}\n   * @param {string} node name...\n   * @returns {*}\n   */\n  parent: (target, name) => {\n    if (target.nodeName === name) return target;\n    while(target.nodeName !== name) {\n      target = target.parentNode;\n    }\n    return target;\n  },\n  attachEvent: (target, type, handler) => {\n    target.removeEventListener(type, handler);\n    target.addEventListener(type, handler);\n    return target;\n  },\n  _toArray: (target) => {\n    return Array.from(target);\n  }\n};\n","import { dateToStr, uuid } from './helpers';\n\n/**\n * Email List\n */\nexport default class EmailList {\n  constructor(list, storage) {\n    this._storage = storage;\n\n    if (this._storage.size) {\n      this._list = this._storage.getItem();\n    } else {\n      this._initialize(list);\n    }\n  }\n\n  get list() {\n    return this._list;\n  }\n\n  // setter\n  set list(list) {\n    this._list = list;\n  }\n\n  _initialize(list) {\n    this._list = list\n      .sort((a, b) => dateToStr(b.date).getTime() - dateToStr(a.date).getTime())\n      .map((item) => ({\n        uuid: uuid(),\n        select: false,\n        ...item\n      }), []);\n    this._storage.setItem(this._list);\n  }\n\n  _findIdxById(uuid) {\n    return this._list.findIndex(_item => _item.uuid === uuid);\n  }\n\n  getItemById(uuid) {\n    return this._list.find(_item => _item.uuid === uuid);\n  }\n\n  removeItemById(uuid) {\n    const findIdx = this._findIdxById(uuid);\n    this._storage.removeItem(uuid);\n    this._list.splice(findIdx, 1);\n  }\n\n  selectedById(uuid) {\n    const item = this.getItemById(uuid);\n    item.select = true;\n    this._storage.updateItem(uuid, 'select', item.select);\n  }\n}\n","import EmailList from './EmailList';\nimport { domHelper, getOffsetParent } from './helpers';\n\nexport default class View {\n  constructor(data) {\n    if (!data instanceof EmailList) {\n      throw new Error('This must be an instance of the EmailList');\n    }\n    this._data = data;\n    this._list = data.list;\n    this._listWrap = domHelper.find('.list_wrap');\n    this._contentWrap = domHelper.find('.wrap_right');\n\n    this._handleClick = this._handleClick.bind(this);\n    this._handleDragStart = this._handleDragStart.bind(this);\n    this._handleDragOver = this._handleDragOver.bind(this);\n    this._handleDragEnd = this._handleDragEnd.bind(this);\n    this._handleDelete = this._handleDelete.bind(this);\n  }\n\n  _handleClick(event) {\n    const li = domHelper.parent(event.target, 'LI');\n    const { uuid } = li.dataset;\n    const item = this._data.getItemById(uuid);\n\n    // selected\n    this._data.selectedById(uuid);\n    li.classList.add('select');\n\n    this._contentWrap.innerHTML = this._makeTemplate('content', item);\n  }\n\n  _handleDragStart(event) {\n    // event.stopPropagation();\n\n    const target = event.target;\n    const dataTransfer = event;\n    dataTransfer.effectAllowed = 'move';\n\n    this._dragItem = target;\n    this._clone(this._dragItem);\n  }\n\n  _handleDragOver(event) {\n    // event.stopPropagation();\n\n    const _target = event.target;\n    const parent = domHelper.parent(_target, 'LI');\n    const diffY = getOffsetParent(parent).top - event.clientY;\n\n    if (diffY < 0) {\n      this._dropPlace = parent;\n    }  else {\n      this._dropPlace = parent.nextElementSibling;\n    }\n    this._dragItem.style.display = 'none';\n    this._listWrap.insertBefore(this._cloneItem, this._dropPlace);\n    this._cloneItem.style.display = 'block';\n  }\n\n  _handleDragEnd() {\n    // console.warn(this._dropPlace, this._dragItem, this._cloneItem);\n    this._dragItem.remove();\n    this._cloneItem.classList.remove('dragging');\n    this._cloneItem.draggable = 'true';\n    this._cloneAttachEvents();\n  }\n\n  _handleDelete(event) {\n    event.stopPropagation();\n    const li = domHelper.parent(event.target, 'LI');\n    const uuid = li.dataset.uuid;\n    this._data.removeItemById(uuid);\n\n    li.style.display = 'none';\n    this._contentWrap.innerHTML = '';\n  }\n\n  _clone(element) {\n    // console.warn('_clone', element);\n    this._cloneItem = element.cloneNode(true);\n    this._cloneItem.draggable = false;\n    this._cloneItem.style.display = 'none';\n    this._cloneItem.classList.add('dragging');\n  }\n\n  _cloneAttachEvents() {\n    const li = this._cloneItem;\n    const deleteBtn = domHelper.find('.btn_mail_delete', li);\n    domHelper.attachEvent(li, 'click', this._handleClick);\n    domHelper.attachEvent(li, 'dragstart', this._handleDragStart);\n    domHelper.attachEvent(li, 'dragover', this._handleDragOver);\n    domHelper.attachEvent(li, 'dragend', this._handleDragEnd);\n    domHelper.attachEvent(deleteBtn, 'click', this._handleDelete);\n  }\n\n  render() {\n    this._listWrap.innerHTML = '';\n    this._contentWrap.innerHTML = '';\n\n    this._list.reduce((wrapper, item) => {\n      wrapper.innerHTML += this._makeTemplate('list', item);\n      return wrapper;\n    }, this._listWrap);\n\n    this._attachEvents();\n  }\n\n  _attachEvents() {\n    Array\n      .from(domHelper.findAll('li', this._listWrap))\n      .forEach(li => {\n        const deleteBtn = domHelper.find('.btn_mail_delete', li);\n        domHelper.attachEvent(li, 'click', this._handleClick);\n        domHelper.attachEvent(li, 'dragstart', this._handleDragStart);\n        domHelper.attachEvent(li, 'dragover', this._handleDragOver);\n        domHelper.attachEvent(li, 'dragend', this._handleDragEnd);\n        domHelper.attachEvent(deleteBtn, 'click', this._handleDelete);\n      });\n    // domHelper.find('li:first-child').click();\n  }\n\n  _makeTemplate(type, item) {\n    const { uuid, sender, date, title, content, select } = item;\n    let template = '';\n    if (type === 'list') {\n      template = `\n        <li class=\"list_article ${select ? 'select' : ''}\" data-uuid=\"${uuid}\" draggable=\"true\">\n          <a href=\"${uuid}\"></a>\n          <div class=\"list_article_top\">\n              <p class=\"user_name ellipse\">${sender}</p>\n              <p class=\"send_date\">${date}</p>\n              <button class=\"btn_mail_delete\"><span class=\"blind\">삭제</span></button>\n          </div>\n          <div class=\"list_article_bottom\">\n              <p class=\"mail_title ellipse\">${content}</p>\n          </div>\n          <button type=\"button\" class=\"btn_list_move\"><span class=\"blind\">이동버튼</span></button>\n        </li>\n      `;\n    } else if (type === 'content') {\n      template = `\n        <div class=\"content_top\">\n          <p class=\"user_name ellipse\">${sender}</p>\n          <p class=\"send_date\">${date}</p>\n          <p class=\"mail_title ellipse\">${title}</p>\n        </div>\n        <div class=\"content_bottom\">\n          ${content.replace(/\\n/g, '<br>')}\n        </div>\n      `;\n    }\n    return template;\n  }\n}\n","import DataStorage from './DataStorage';\nimport EmailList from './EmailList';\nimport View from './View';\nimport { domHelper } from './helpers';\n\ndomHelper.attachEvent(window.document, 'DOMContentLoaded', function() {\n  const dataStorage = new DataStorage();\n  const emailList = new EmailList(window.aEmailData, dataStorage);\n  const view = new View(emailList);\n\n  view.render();\n});\n"]}